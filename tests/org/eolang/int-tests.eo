+package org.eolang
+junit

[] > less-true
  less. > @
    10
    50

[] > less-equal
  not. > @
    less.
      10
      10

[] > less-false
  not. > @
    less.
      10
      -5

[] > greater-true
  greater. > @
    -200
    -1000

[] > greater-false
  not. > @
    greater.
      0
      100

[] > greater-equal
  not. > @
    greater.
      0
      0

[] > leq-true
  leq. > @
    -200
    -100

[] > leq-equal
  leq. > @
    50
    50

[] > leq-false
  not. > @
    leq.
      0
      -10

[] > geq-true
  geq. > @
    -1000
    -1100

[] > geq-equal
  geq. > @
    113
    113

[] > geq-false
  not. > @
    geq.
      0
      10

[] > eq-true
  eq. > @
    123
    123

[] > eq-false
  not. > @
    eq.
      123
      42

[] > neq-true
  neq. > @
    123
    125

[] > neq-false
  not. > @
    neq.
      -133
      -133

[] > calculates-fibonacci-number-with-recursion
  eq. > @
    13
    fibo 7
  [n] > fibo
    if. > @
      n.less 3
      1
      add.
        fibo (n.sub 1)
        fibo (n.sub 2)

[] > calculates-fibonacci-number-with-tail
  eq. > @
    13
    fibonacci 7
  [n] > fibonacci
    if. > @
      n.less 3
      small n
      rec n 1 1
    [n] > small
      if. > @
        n.eq 2
        1
        n
    [n minus1 minus2] > rec
      if. > @
        n.eq 3
        minus1.add minus2
        rec (n.sub 1) (minus1.add minus2) minus1

# Checks that division by zero returns an error object
[] > zero-division
  eq. > @
    (2.div 0).msg
    "Division by zero is undefined"

# Checks mathematical equality
# A = ((A div B) * B) + (A mod B)
[] > div-mod-compatibility
  -13 > dividend
  5 > divisor
  dividend.mod divisor > remainder
  dividend.div divisor > quotient
  eq. > @
    dividend
    add.
      remainder
      mul.
        divisor
        quotient

# Checks that division by one returns the dividend
[] > divisioe-by-one
  -235 > dividend
  eq. > @
    dividend.div 1
    dividend

# Checks that div works properly with dividends greater than zero
[] > div-for-dividend-greater-than-zero
  256.div 16 > quotient
  quotient.eq 16 > @

# Checks div with remainder
[] > div-with-remainder
  (13.div -5).eq -2 > @

# Checks that int.as-float works properly
[] > as-float-works
  eq. > @
    -17.0
    17.neg.as-float
